import PropTypes from 'prop-types'

import './index.scss'

function ImageWavy({ image, color1, color2, color3, color4, children }) {
	const classRoot =
		'PORTFOLIO-ImageWavy' + (image === 'in-child' ? '-inChild' : '')
	return (
		<div className={classRoot}>
			<Wave
				classRoot={classRoot}
				color1={color1}
				color2={color2}
				color3={color3}
				color4={color4}
			/>
			{image === 'in-child' && children}
			{image !== 'in-child' && (
				<div className="PORTFOLIO-ImageWavy-image-container">
					<img
						src={image}
						alt="DÃ©cor de fond, du haut de page"
						className="PORTFOLIO-ImageWavy-image"
					/>
				</div>
			)}
		</div>
	)
}

function Wave({ classRoot, color1, color2, color3, color4 }) {
	return (
		<svg
			className={`${classRoot}-wave`}
			viewBox="0 0 1440 260"
			version="1.1"
			xmlns="http://www.w3.org/2000/svg"
		>
			<defs>
				<linearGradient id="sw-gradient-0" x1="0" x2="0" y1="1" y2="0">
					<stop stopColor={color1} offset="0%"></stop>
					<stop stopColor={color2} offset="100%"></stop>
				</linearGradient>
			</defs>
			<path
				fill="url(#sw-gradient-0)"
				d="M0,182L18.5,177.7C36.9,173,74,165,111,143C147.7,121,185,87,222,82.3C258.5,78,295,104,332,117C369.2,130,406,130,443,108.3C480,87,517,43,554,34.7C590.8,26,628,52,665,56.3C701.5,61,738,43,775,39C812.3,35,849,43,886,60.7C923.1,78,960,104,997,117C1033.8,130,1071,130,1108,138.7C1144.6,147,1182,165,1218,173.3C1255.4,182,1292,182,1329,164.7C1366.2,147,1403,113,1440,95.3C1476.9,78,1514,78,1551,99.7C1587.7,121,1625,165,1662,156C1698.5,147,1735,87,1772,86.7C1809.2,87,1846,147,1883,177.7C1920,208,1957,208,1994,186.3C2030.8,165,2068,121,2105,121.3C2141.5,121,2178,165,2215,160.3C2252.3,156,2289,104,2326,108.3C2363.1,113,2400,173,2437,177.7C2473.8,182,2511,130,2548,99.7C2584.6,69,2622,61,2640,56.3L2658.5,52L2658.5,260L2640,260C2621.5,260,2585,260,2548,260C2510.8,260,2474,260,2437,260C2400,260,2363,260,2326,260C2289.2,260,2252,260,2215,260C2178.5,260,2142,260,2105,260C2067.7,260,2031,260,1994,260C1956.9,260,1920,260,1883,260C1846.2,260,1809,260,1772,260C1735.4,260,1698,260,1662,260C1624.6,260,1588,260,1551,260C1513.8,260,1477,260,1440,260C1403.1,260,1366,260,1329,260C1292.3,260,1255,260,1218,260C1181.5,260,1145,260,1108,260C1070.8,260,1034,260,997,260C960,260,923,260,886,260C849.2,260,812,260,775,260C738.5,260,702,260,665,260C627.7,260,591,260,554,260C516.9,260,480,260,443,260C406.2,260,369,260,332,260C295.4,260,258,260,222,260C184.6,260,148,260,111,260C73.8,260,37,260,18,260L0,260Z"
			></path>
			<defs>
				<linearGradient id="sw-gradient-1" x1="0" x2="0" y1="1" y2="0">
					<stop stopColor={color3} offset="0%"></stop>
					<stop stopColor={color4} offset="100%"></stop>
				</linearGradient>
			</defs>
			<path
				style={{ transform: 'translate(0, 50px)' }}
				fill="url(#sw-gradient-1)"
				d="M0,156L18.5,147.3C36.9,139,74,121,111,121.3C147.7,121,185,139,222,143C258.5,147,295,139,332,112.7C369.2,87,406,43,443,52C480,61,517,121,554,125.7C590.8,130,628,78,665,69.3C701.5,61,738,95,775,108.3C812.3,121,849,113,886,125.7C923.1,139,960,173,997,156C1033.8,139,1071,69,1108,60.7C1144.6,52,1182,104,1218,117C1255.4,130,1292,104,1329,86.7C1366.2,69,1403,61,1440,73.7C1476.9,87,1514,121,1551,143C1587.7,165,1625,173,1662,151.7C1698.5,130,1735,78,1772,86.7C1809.2,95,1846,165,1883,164.7C1920,165,1957,95,1994,91C2030.8,87,2068,147,2105,143C2141.5,139,2178,69,2215,34.7C2252.3,0,2289,0,2326,13C2363.1,26,2400,52,2437,56.3C2473.8,61,2511,43,2548,60.7C2584.6,78,2622,130,2640,156L2658.5,182L2658.5,260L2640,260C2621.5,260,2585,260,2548,260C2510.8,260,2474,260,2437,260C2400,260,2363,260,2326,260C2289.2,260,2252,260,2215,260C2178.5,260,2142,260,2105,260C2067.7,260,2031,260,1994,260C1956.9,260,1920,260,1883,260C1846.2,260,1809,260,1772,260C1735.4,260,1698,260,1662,260C1624.6,260,1588,260,1551,260C1513.8,260,1477,260,1440,260C1403.1,260,1366,260,1329,260C1292.3,260,1255,260,1218,260C1181.5,260,1145,260,1108,260C1070.8,260,1034,260,997,260C960,260,923,260,886,260C849.2,260,812,260,775,260C738.5,260,702,260,665,260C627.7,260,591,260,554,260C516.9,260,480,260,443,260C406.2,260,369,260,332,260C295.4,260,258,260,222,260C184.6,260,148,260,111,260C73.8,260,37,260,18,260L0,260Z"
			></path>
		</svg>
	)
}

ImageWavy.propTypes = {
	image: PropTypes.oneOfType([
		PropTypes.oneOf(['in-child']),
		PropTypes.string,
	]).isRequired,
	color1: PropTypes.string.isRequired,
	color2: PropTypes.string.isRequired,
	color3: PropTypes.string.isRequired,
	color4: PropTypes.string.isRequired,
	children: PropTypes.any,
}

Wave.propTypes = {
	classRoot: PropTypes.string.isRequired,
	color1: PropTypes.string.isRequired,
	color2: PropTypes.string.isRequired,
	color3: PropTypes.string.isRequired,
	color4: PropTypes.string.isRequired,
}

export default ImageWavy
